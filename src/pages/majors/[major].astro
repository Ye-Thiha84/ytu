---
import MainLayout from "../../layouts/MainLayout.astro";
import { fetchMajors } from "../../lib/fetchMajors";

// Fetch all majors' slugs for static paths
export async function getStaticPaths() {
  try {
    const majors = await fetchMajors();
    return majors.map((major) => ({
      params: { major: major.slug },
    }));
  } catch (error) {
    console.error("Error fetching majors for static paths:", error.message);
    return [];
  }
}

// Params
const { major } = Astro.params;

// Fetch specific major
let majorData = null;
let error = null;

try {
  const allMajors = await fetchMajors();
  majorData = allMajors.find((m) => m.slug === major);

  if (!majorData) {
    return new Response(`Major with slug "${major}" not found`, { status: 404 });
  }
} catch (err) {
  console.error(`Error fetching major with slug "${major}":`, err.message);
  return new Response(`Error fetching major: ${err.message}`, { status: 500 });
}

// Ensure key_topics and career_prospects are arrays
const keyTopics = Array.isArray(majorData.key_topics) ? majorData.key_topics : [];
const careerProspects = Array.isArray(majorData.career_prospects) ? majorData.career_prospects : [];
---

<MainLayout>
  <section class="major-container">
    <h1 class="major-title">{majorData.title}</h1>
    <p class="major-description">{majorData.description || "No description available."}</p>

    <div class="info-block">
      <h2>Key Topics</h2>
      {keyTopics.length > 0 ? (
        <ul>
          {keyTopics.map((topic) => (
            <li>{topic}</li>
          ))}
        </ul>
      ) : (
        <p>No key topics available.</p>
      )}
    </div>

    <div class="info-block">
      <h2>Career Prospects</h2>
      {careerProspects.length > 0 ? (
        <ul>
          {careerProspects.map((career) => (
            <li>{career}</li>
          ))}
        </ul>
      ) : (
        <p>No career prospects available.</p>
      )}
    </div>

    <a href="/maj" class="back-link">‚Üê Back to All Majors</a>
  </section>

  <style>
    :root {
      --text-color: #1a1a1a;
      --bg-color: #ffffff;
      --primary-color: #1a73e8;
      --hover-color: #0c5fd3;
      --card-bg: #f9f9f9;
      --shadow: 0 2px 10px rgba(0, 0, 0, 0.05);
    }

    .major-container {
      max-width: 760px;
      margin: 0 auto;
      padding: 3rem 1rem;
      color: var(--text-color);
      background-color: var(--bg-color);
    }

    .major-title {
      font-size: 2.25rem;
      text-align: center;
      margin-bottom: 1rem;
      font-weight: 600;
    }

    .major-description {
      font-size: 1.125rem;
      line-height: 1.7;
      color: #444;
      text-align: center;
      margin-bottom: 3rem;
    }

    .info-block {
      background-color: var(--card-bg);
      padding: 1.5rem;
      border-radius: 10px;
      margin-bottom: 2rem;
      box-shadow: var(--shadow);
    }

    .info-block h2 {
      font-size: 1.5rem;
      margin-bottom: 1rem;
      color: #2c3e50;
    }

    .info-block ul {
      padding-left: 1.5rem;
      list-style-type: disc;
      color: #333;
    }

    .info-block li {
      font-size: 1rem;
      margin-bottom: 0.5rem;
    }

    .back-link {
      display: block;
      text-align: center;
      margin-top: 2rem;
      text-decoration: none;
      font-weight: 500;
      color: var(--primary-color);
      transition: color 0.2s ease;
    }

    .back-link:hover {
      color: var(--hover-color);
    }

    @media (max-width: 500px) {
      .major-title {
        font-size: 1.75rem;
      }

      .major-description {
        font-size: 1rem;
      }

      .info-block h2 {
        font-size: 1.25rem;
      }
    }
  </style>
</MainLayout>